
=======================================================================

QUESTIONS
* * *

[OK] 1. Why we study algorithms?
* * *

[OK] 2. What is an algorithm?
* * *

3. Consider the Euclids's algorithm (https://en.wikipedia.org/wiki/Euclidean_algorithm#
Implementations) to calculate greatest common factor. How we know that it finished on finit time?
* * *

4. Consider the next procudere to calculate greatest common factor:
---
-> STEP 1 Find the prime factors of m. (example: output = 60;1)
-> STEP 2 Find the prime factors of n. (example: output = 24;1)
-> STEP 3 Identify all the common factors in the two prime expansions found in Step 1 and Step 2.
(If p is a common factor occurring pm and pn times in m and n, respectively, it should be
repeated min{pm, pn} times.)
-> STEP 4 Compute the product of all the common factors and return it as the greatest common
divisor of the numbers given.
---
Why this procedure is not qualified with a legit algorithm?


* * *

5. Design, as a fluxogram, the project's analysis algorithm process and show a brief explanation about each step.
* * *

=======================================================================

ANSWERS
* * *

[OK] 1. We study algorithms to both practial and theorical reasons: first one, practial to know a standart set of important algorithms and should be able to design new ones and analyse their efficiency; second, theorical, because algorithms is the conerstone of computer science and relevant to most of science, business and tecnologies today; even those ones who don't work with it directly, is important to know basics of algorithms because without it our usual mobile apps and computer programs didn't exist; and, for that ones who study it, could be able to developing analytical skill and useful strategies to day life and office, wich is an important skill seek for word wide companies.
* * *

[OK] 2.According (Levitin, 2012) "algorithm is a sequence of unambiguous instructions for solving a problem, i.e., for obtaining a required output for any legitimate input in a finite amount of time" and [...]"The reference to “instructions” in the definition implies that there is something or someone capable of understanding and following the instructions given. We call this a 'computer'". Before our actual computer machines, someone whos compute some operations was considered a "computer". 
* * *

3."Since the remainders are non-negative integers that decrease with every step, the sequence [ r-1 > r0 > r1 > r2 > ... >= 0]
cannot be infinite, so the algorithm must eventually fail to produce the next step; but the division algorithm can always proceed to the (N+1)th step provided rN > 0. Thus the algorithm must eventually produce a zero remainder rN = 0. The final nonzero remainder is the greatest common divisor of a and b: rN-1 = gcd(a,b)"
* * *

4."Because the prime factorization steps are not defined unambiguously: they require a list of prime numbers, and I strongly suspect that your middle-school math teacher did not explain how to obtain such a list[...]  Unless this issue is resolved, we cannot, say, write a program implementing this procedure" (Levitin, 2012)
* * *

5. <see at the book>
#1 Understand the problem
#2 Decide on: computational means, exact vs. approximate solving, algorith design technique
#3 Design an algorithm
#4 Prove correctness (back to 2 an 3)
#5 Analyse the algorithm (back to 2 an 3)
#6 Code the algorithm
* * *

